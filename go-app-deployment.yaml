# Api Deployment
---
apiVersion: v1
kind: Namespace
metadata:
  name: fiber-ns
  labels:
    app: go-fiber-app
spec: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: go-fiber-app
  name: go-fiber-app
  namespace: fiber-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-fiber-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: go-fiber-app
    spec:
      containers:
      - name: go-fiber-app
        image: quay.io/rh_ee_mrudraia/go-fiber-app:v9
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: database_host
          
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: postgres_user
          
        - name: DB_PASS
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: postgres_password
    
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: mysecret
              key: database_name
          
        resources: {}
        
status: {}

# Database Postgres Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deploy
  namespace: fiber-ns
  labels:
    name: postgres-deploy
    app: go-fiber-app
spec:
  replicas: 1
  selector: 
    matchLabels:
      name: postgres-pod
      app: go-fiber-app
  template:
    metadata:
      name: postgres-pod
      labels:
        name: postgres-pod
        app: go-fiber-app
    spec:
      containers:
      - name: postgres
        image: quay.io/rh_ee_mrudraia/postgres:v5
        ports:  
        - containerPort:  5432
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: postgres_user
            
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysecret
                key: postgres_password

          - name: POSTGRES_HOST_AUtH_METHOD
            valueFrom:
              configMapKeyRef:
                name: myconfigmap
                key: AUtH_METHOD

            
          - name: PGDATA
            valueFrom:
              configMapKeyRef:
                name: myconfigmap
                key: PGDATA

        volumeMounts:
          - name: postgresdb
            mountPath: /var/lib/postgresql/data
            subpath: pgdata

      volumes:
      - name: postgresdb
        persistentVolumeClaim:
          claimName: mypvc
            


# Service for Application to Database
---
apiVersion: v1
kind: Service
metadata:
  name: db
  namespace: fiber-ns
  labels:
    name: postgres-service
    app: go-fiber-app
spec:
  type: NodePort
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    name: postgres-pod
    app: go-fiber-app


# service for Application
---
apiVersion: v1
kind: Service
metadata:
  name: go-app-service
  namespace: fiber-ns
spec:
  type: ClusterIP
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: go-fiber-app

---

# Secrets for confidential data
---
apiVersion: v1
kind: Secret
metadata: 
  name: mysecret
  namespace: fiber-ns
type: Opaque
data:
  database_host: ZGI=
  database_name: ZmliZXJfZGVtbw==
  postgres_user: cG9zdGdyZXM=
  postgres_password: cGFzc3dvcmQ=

---
# ConfigMap for configuration data
apiVersion: v1
kind: ConfigMap
metadata:
  name: myconfigmap
  namespace: fiber-ns
data:
  AUtH_METHOD: trust
  PGDATA: var/lib/postgresql/data/pgdata

---

# Persistent Volume for data persistence
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mypvc
  namespace: fiber-ns
  labels:
    app: go-fiber-app
spec:
  storageClassName: gp2-csi
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi




        
  
