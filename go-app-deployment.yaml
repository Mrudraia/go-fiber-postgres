---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: go-fiber-app
  name: go-fiber-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: go-fiber-app
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: go-fiber-app
    spec:
      containers:
      - name: go-fiber-app
        image: quay.io/rh_ee_mrudraia/go-fiber-app:v4
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "db"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASS
          value: "password"
        - name: DB_NAME
          value: "fiber_demo"
        resources: {}
        
status: {}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-deploy
  labels:
    name: postgres-deploy
    app: go-fiber-app
spec:
  replicas: 1
  selector: 
    matchLabels:
      name: postgres-pod
      app: go-fiber-app
  template:
    metadata:
      name: postgres-pod
      labels:
        name: postgres-pod
        app: go-fiber-app
    spec:
      containers:
      - name: postgres
        image: quay.io/rh_ee_mrudraia/postgres:v3
        ports:  
        - containerPort:  5432
        env:
          - name: POSTGRES_USER
            value: "postgres"
          - name: POSTGRES_PASSWORD
            value: "password"
          - name: POSTGRES_HOST_AUtH_METHOD
            value: trust

---
apiVersion: v1
kind: Service
metadata:
  name: db
  labels:
    name: postgres-service
    app: go-fiber-app
spec:
  type: LoadBalancer
  ports:
  - port: 5432
    targetPort: 5432
  selector:
    name: postgres-pod
    app: go-fiber-app

---
apiVersion: v1
kind: Service
metadata:
  name: go-app-service
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  selector:
    app: go-fiber-app

---
# apiVersion: extensions/v1beta1
# kind: Ingress
# metadata:
#   name: go-app-ingress
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
# spec:
#   rules:
#   - host: k8s.local
#     http:
#       paths:
#       - path: /books
#         backend:
#           serviceName: go-app-service
#           servicePort: 80
        
  